openapi: 3.0.0
info:
  title: API CAROL-RENTAL 
  description: API ส่วนใหญ่ จะต้องเเนบ token ใน Authorization ในรูปเเบบ Bearer Token เพื่อเข้าถึง API ต่างๆ ได้ ยกเว้นส่วนของการ login,register,/getAllProduct และ /getProductจะไม่ต้องเเนบ token เพื่อเข้าถึง API ได้  ส่วนของการส่งรูปเข้ามาให้ส่งในรูป เเบบ fromdata 
  version: 0.1.9
servers:
  - url: https://carol-rental.cyclic.cloud/api

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: user & admin.
      description: login user and admin for token.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: admin 
      responses:
        '200':    # status code
          description: status, message, token
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/LoginResponse'
  /auth/register:
    post:
      tags:
        - Auth
      summary: user 
      description: register user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /admin/createAdmin:
    post:
      tags:
        - Admin
      summary: admin 
      description: register admin.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /admin/createProduct:
    post:
      tags:
      - Product
      summary: admin
      description: create product // ส่วนตรงนี้ให้ส่งในรูป เเบบ fromdata เนื่องจากมีการอับโหลด ไฟล์มาด้วย ใช้ชื่อตัวเเปรไฟลเป็น image.
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ProductInsert'
  /getProduct/{id}:
    get:
      tags:
      - Product
      summary: user & admin
      description: get product by id.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ProductResponse'
  /getAllProduct:
    get:
      tags:
      - Product
      summary: user & admin
      description: get all product not remove.
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ProductResponse'
  /admin/updateProduct/{id}:
    put:
      tags:
      - Product
      summary: admin
      description: update product // ส่วนตรงนี้ให้ส่งในรูป เเบบ fromdata เนื่องจากมีการอับโหลด ไฟล์มาด้วย ใช้ชื่อตัวเเปรไฟลเป็น image.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to update
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ProductUpdate'
  /admin/removeProduct/{id}:
    get:
      tags:
      - Product
      summary: admin
      description: remove product by id 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to update
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /admin/getAllUser:
    get:
      tags:
      - User
      summary: admin
      description: get all user not remove.
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/UserResponse'
  /getUser/{id}:
    get:
      tags:
      - User
      summary: user & admin
      description: get user by id.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/UserResponse'
  /user/updateUser/{id}:
    put:
      tags:
      - User
      summary: user 
      description: update user by id.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to update
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/UserUpdate'
  /user/removeUser/{id}:
    get:
      tags:
      - User
      summary: user
      description: remove user by id 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to update
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /user/getAddress/{id}:
    get:
      tags:
      - Address
      summary: user
      description: get address by id.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/AddressResponse'
  /user/createAddress:
    post:
      tags:
      - Address
      summary: user
      description: create address by id.
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/AddressInsert'
  /user/getAllAddress/{user_id}:
    get:
      tags:
      - Address
      summary: user
      description: get all address by user_id.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/AddressResponse'
  /user/updateAddress/{id}:
    put:
      tags:
      - Address
      summary: user
      description: update address by id.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the address to update
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/AddressUpdate'
  /user/removeAddress/{id}:
    get:
      tags:
      - Address
      summary: user
      description: remove address by id 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the address to update
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /user/createTransaction:
    post:
      tags:
      - Transaction
      summary: user
      description: create transaction by id.
      responses:
        '200':
          description: status, message
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/TransactionInsert'
  /getTransaction/{id}:
    get:
      tags:
      - Transaction
      summary: user & admin
      description: get transaction by id.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the transaction to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/TransactionResponse'
  /getTransactionByUser/{user_id}:
    get:
      tags:
      - Transaction
      summary: user & admin
      description: get transaction by user_id.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/TransactionResponse'
  /getTransactionByOrder/{order_id}:
    get:
      tags:
      - Transaction
      summary: user & admin
      description: get transaction by order_id.
      parameters:
        - in: path
          name: order_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/TransactionResponse'
  /user/checkOrderOut:
    get:
      tags:
      - Order
      summary: user
      description: เช็ค transaction ก่อนที่จะทำเป็น order ว่า stock ยังเหลืออยู่ไหม ให้เช็คทุกครั้งก่อนที่จะสร้าง order ถ้า false เเปลว่า product นั้นไม่มี stock ที่เลือกเหลืออยู่ ถ้า true สามารถไปสร้าง order ต่อได้.
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  required:
                    - user_id
                    - list_transaction_id
                  properties:
                    user_id:
                      type: number
                      example: 1
                    list_transaction_id:
                      type: array
                      items:
                        type: number
                        example: [1,2,3]
  /user/createOrder:
    post:
      tags:
      - Order
      summary: user
      description: หลังจากจ่ายเงินเรียบร้อย กรอกข้อมูลที่ต้องการ เเล้วส่งมาพร้อมอับโหลดรูปหลักฐานจ่ายเงิน ส่งในรูป เเบบ fromdata เนื่องจากมีการอับโหลด ใช้ชื่อตัวเเปรไฟลเป็น image **type_delivery จะมีเเค่สองเเบบเท่านั้น คือ delivery ขนส่งตามที่อยู่ เเละ pickup รับของเอง **.
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/OrderInsert'
  /getOrder/{id}:
    get:
      tags:
      - Order
      summary: user & admin
      description: get order by id.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to get
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/OrderResponse'
  /admin/getAllOrder:
    get:
      tags:
      - Order
      summary: admin
      description: get all order not remove.
      responses:
        '200':
          description: status, message , data
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/OrderAllResponse'
  /admin/verifyPaymentOrder/{id}:
    put:
      tags:
      - Order
      summary: admin
      description: admin ตรวจสอบหลักฐานการจ่ายเงิน ถ้าถูกต้องจะเปลี่ยน status จาก waiting เป็น shipment.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to update
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /admin/cancelPaymentOrder/{id}:
    put:
      tags:
      - Order
      summary: admin
      description: admin ยกเลิกการจ่ายเงิน ถ้าหลักฐานการจ่ายเงินไม่ถูกต้อง จะเปลี่ยน status จาก waiting เป็น cancel.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to update
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /admin/confirmShipmentOrder/{id}:
    post:
      tags:
      - Order
      summary: admin
      description: admin ยืนยันการจัดส่ง โดยจะอัพโหลดรูปเเบบ before โดยส่งมาเป็น array ในชื่อ image_before ในรูปเเบบการส่ง formdata เเละให้ส่ง เลขพัสดุกับบริษัท จากนั้นจะเปลี่ยน status จาก shipment เป็น delivery.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to update
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  required:
                    - tracking_number
                    - shipping_company
                    - list_id_transaction
                    - image_before
                  properties:
                    tracking_number:
                      type: string
                      example: 123456789
                    list_id_transaction:
                      type: array
                      items:
                        type: number
                        example: [1,2,3]
                    shipping_company:
                      type: string
                      example: kerry
                    image_before:
                      type: array
                      items:
                        type: string
                        format: binary
                        example: uploadfile only jpeg png jpg
  /user/receiveUserOrder/{id}:
    put:
      tags:
      - Order
      summary: user
      description: user ยืนยันการรับของ  จากนั้นจะเปลี่ยน status จาก delivery เป็น rental.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to update
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /user/returnOrder/{id}:
    put:
      tags:
      - Order
      summary: user
      description: user ยืนยันการคืนของ เเละให้ส่ง เลขพัสดุกับบริษัท จากนั้นจะเปลี่ยน status จาก rental เป็น return.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to update
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  required:
                    - tracking_number
                    - shipping_company
                  properties:
                    tracking_number:
                      type: string
                      example: 123456789
                    shipping_company:
                      type: string
                      example: kerry
  /admin/confirmReceiveOrder/{id}:
    put:
      tags:
      - Order
      summary: admin
      description: admin ยืนยันการรับของ จากนั้นจะเปลี่ยน status จาก return เป็น complete.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to update
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
  /admin/problemReceiveOrder/{id}:
    put:
      tags:
      - Order
      summary: admin
      description: admin รายงานปัญหาการรับของ ถ้าเกิดสินค้านั้นเสียหาย admin จะอับโหลดรูปเฉพาะสิ้นค้านั้น ส่งมาเป็น array ในชื่อ image_problem จากนั้นส่ง list_id_problem_transaction เเละ cost_damages_list มาให้ index ตรงกัน จากนั้นจะเปลี่ยน status จาก return เป็น problem.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the order to update
      responses:
        '200':
          description: status, message 
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/BaseResponse'
      requestBody:
          content:
            application/json:
                schema:
                  required:
                    - list_id_problem_transaction
                    - cost_damages_list
                    - image_problem
                  properties:
                    list_id_problem_transaction:
                      type: array
                      items:
                        type: number
                        example: [1,2,3]
                    cost_damages_list:
                      type: array
                      items:
                        type: number
                        example: [100,200,300]
                    image_problem:
                      type: array
                      items:
                        type: string
                        format: binary
                        example: uploadfile only jpeg png jpg


components:
  schemas:
    LoginResponse:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
          example: Login success
        data:
          type: object
          properties:
            token:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImJpZzIiLCJ0eXBlIjoidXNlciIsImlhdCI6MTY5NDE4MTEzNywiZXhwIjoxNjk0MTg0NzM3fQ.0sjmV7K7y4U0MIZ4IgGc3S-wG55iVboKktfTb3QgEF4
    BaseResponse:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
          example: success
    Admin:
      type: object
      required:
        - name 
        - price_base
        - price_per_day
        - created_by
      properties:
          username: 
            type: string
            example: admin1
          password: 
            type: string
            example: 123456
          name: 
            type: string
            example: admin1
          surname: 
            type: string
            example: nametest
          phone: 
            type: string
            example: 0900000000
          email: 
            type: string
            example: admin@gmail.com
          address_line: 
            type: string
            example: 43/1
          sub_district_id: 
            type: number
            example: 100101
          province_id: 
            type: number
            example: 1
          district_id: 
            type: number
            example: 1001
          role: 
            type: string
            example: CEO
          id_card: 
            type: string
            example: 1844444444444
    User:
      type: object
      required:
        - username 
        - password
        - name
        - surname
        - phone
        - email
      properties:
        username: 
          type: string
          example: big2
        password: 
          type: string
          example: 123456
        name: 
          type: string
          example: big2
        surname: 
          type: string
          example: asdasda
        phone: 
          type: string
          example: 0111111
        email: 
          type: string
          example: big@12346
    UserUpdate:
      type: object
      required:
        - name
        - surname
        - phone
        - email
      properties:
        name: 
          type: string
          example: big2
        surname: 
          type: string
          example: asdasda
        phone: 
          type: string
          example: 0111111
        email: 
          type: string
          example: big@12346
    ProductInsert:           # <----------
      type: object
      required:
        - name 
        - price_base
        - price_per_day
        - created_by
        - image
      properties:
        name :
          type: string
          example: product1
        price_base :
          type: integer
          example: 500
        price_per_day :
          type: integer
          example: 50
        created_by  :
          type: integer
          example: 1
        description  :
          type: string
          example: description of product
        size  :
          type: array
          items:
            example: [XX,5] 
        image :
          type: string
          format: binary
          example: uploadfile only jpeg png jpg
    ProductUpdate:           # <----------
      type: object
      required:
        - name 
        - price_base
        - price_per_day
        - updated_by
        - image
      properties:
        name :
          type: string
          example: product1
        price_base :
          type: integer
          example: 500
        price_per_day :
          type: integer
          example: 50
        updated_by  :
          type: integer
          example: 1
        description  :
          type: string
          example: description of product
        size  :
          type: array
          items:
            example: [XX,5] 
        image :
          type: string
          format: binary
          example: uploadfile only jpeg png jpg
    ProductResponse:

      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
          example: success
        data:
          type: object
          properties:
              id: 
                type: number
                example: 1
              name: 
                type: string
                example: test
              price: 
                type: string
                format: nullable
              description: 
                type: string
                example: testtesttest
              stock: 
                type: array
                items: 
                  type: object
                  properties: 
                    size: 
                      type: string
                      example: X
                    count: 
                      type: number
                      example: 1
              img: 
                type: object
                properties: 
                  img_url_s: 
                    type: string
                    example: https://drive.google.com/uc?export=view&id=1nrsi3UOvnGXl_oR88y7dJZIK2ifetb7I
                  img_url_m: 
                    type: string
                    example: https://drive.google.com/uc?export=view&id=1_On4O_RVkSjo-7TDvti7frrOYXC5M9i7
                  img_url_l: 
                    type: string
                    example: https://drive.google.com/uc?export=view&id=18cG7Yw1f2KW99eDuRhAmkrFdaRVuk4In
              cost_rent: 
                type: object
                properties: 
                  cost_base: 
                    type: number
                    example: 5006
                  cost_per_day: 
                    type: number
                    example: 504
              count_rent: 
                type: number
                example: 0
              created_at: 
                type: string
                format: date-time
                example: 2023-09-09T11:11:24.596Z
              updated_at: 
                type: string
                format: date-time
                example: 2023-09-09T11:11:24.596Z
    UserResponse:
      type: object
      properties: 
        status: 
          type: boolean
        message: 
          type: string
          example: Get user success
        data: 
          type: array
          items: 
            type: object
            properties: 
              id: 
                type: number
                example: 1
              username: 
                type: string
                example: big123
              name: 
                type: string
                example: big
              surname: 
                type: string
                example: asdasda
              phone: 
                type: string
                example: 01234659
              email: 
                type: string
                example: big@12346
              createdAt: 
                type: string
                format: date-time
                example: 2023-09-08T14:42:45.057Z
              updatedAt: 
                type: string
                format: date-time
                example: 2023-09-08T14:42:45.057Z
              update_by: 
                type: string
                format: nullable
              status: 
                type: string
                example: active
    AddressInsert:
      type: object
      required:
        - user_id
        - address_line
        - sub_district_id
        - province_id
        - district_id
      properties:
        user_id: 
          type: number
          example: 1
        address_line: 
          type: string
          example: 43/1
        sub_district_id: 
          type: number
          example: 100101
        province_id: 
          type: number
          example: 1
        district_id: 
          type: number
          example: 1001
    AddressUpdate:
      type: object
      required:
        - address_line
        - sub_district_id
        - province_id
        - district_id
      properties:
        address_line: 
          type: string
          example: 43/1
        sub_district_id: 
          type: number
          example: 100101
        province_id: 
          type: number
          example: 1
        district_id: 
          type: number
          example: 1001
    AddressResponse:
      type: object
      properties: 
        status: 
          type: boolean
        message: 
          type: string
          example: Get address success
        data: 
          type: array
          items: 
            type: object
            properties: 
              id: 
                type: number
                example: 3
              user_id: 
                type: number
                example: 2
              address_line: 
                type: string
                example: 43/1
              sub_district: 
                type: object
                properties: 
                  name_th: 
                    type: string
                    example: สีลม
                  name_en: 
                    type: string
                    example: Si Lom
              district: 
                type: object
                properties: 
                  name_th: 
                    type: string
                    example: เขตบางรัก
                  name_en: 
                    type: string
                    example: Khet Bang Rak
              province: 
                type: object
                properties: 
                  name_th: 
                    type: string
                    example: กรุงเทพมหานคร
                  name_en: 
                    type: string
                    example: Bangkok
              zip_code: 
                type: string
                example: 10500
              createdAt: 
                type: string
                format: date-time
                example: 2023-09-09T13:56:03.722Z
    TransactionInsert:
      type: object
      required:
        - user_id
        - size
        - product_id
        - date_rental_start
        - date_rental_stop
        - cost
      properties:
          product_id: 
            type: number
            example: 3
          size: 
            type: string
            example: XX
          date_rental_start: 
            type: string
            format: date
            example: 2023-11-03
          date_rental_stop: 
            type: string
            format: date
            example: 2023-11-03
          cost: 
            type: string
            example: 200
          user_id: 
            type: number
            example: 2
    TransactionResponse:
      type: object
      properties: 
        status: 
          type: boolean
        message: 
          type: string
          example: Get transaction success
        data: 
          type: object
          properties: 
            id: 
              type: number
              example: 1
            order_id: 
              type: number
              format: nullable
              example: 1
            img_product: 
              type: object
              properties: 
                img_before_id: 
                  type: number
                  format: nullable
                  example: 1
                img_after_id: 
                  type: number
                  format: nullable
                  example: 1
            product: 
              type: object
              properties: 
                id: 
                  type: number
                  example: 2
                name: 
                  type: string
                  example: test1
                img: 
                  type: string
                  example: https://drive.google.com/uc?export=view&id=1MRktzyso6Z7wCJr83YSmQj4rk_jpawAk
            rental: 
              type: object
              properties: 
                id: 
                  type: number
                  example: 1
                date_rent: 
                  type: string
                  format: date-time
                  example: 2023-11-03T00:00:00.000Z
                date_admin_receive: 
                  type: string
                  format: nullable
                date_user_receive: 
                  type: string
                  format: nullable
                date_return: 
                  type: string
                  format: date-time
                  example: 2023-11-03T00:00:00.000Z
            cost: 
              type: number
              example: 200
            size: 
              type: string
              example: XX
            status: 
              type: string
              example: pending
            create_at: 
              type: string
              format: date-time
              example: 2023-09-09T21:20:34.026Z
    OrderInsert:
      type: object
      required:
        - user_id
        - list_transaction_id
        - type_delivery
        - type_payment
        - contact_name
        - contact_phone
        - email
        - address_id
        - total_cost
        - image
      properties:
        user_id: 
          type: number
          example: 2
        list_transaction_id: 
          type: array
          items:
            type: number
            example: [1,2,3]
        type_delivery: 
          type: string
          example: delivery
        type_payment: 
          type: string
          example: qr
        contact_name:
          type: string
          example: dady
        contact_phone:
          type: string
          example: 0900000000
        email:
          type: string
          example: dady@12346
        address_id:
          type: number
          example: 1
        total_cost:
          type: number
          example: 200
        image:
          type: string
          format: binary
          example: uploadfile only jpeg png jpg
    OrderResponse:
      type: object
      properties:
        status: 
          type: boolean
        message: 
          type: string
          example: Get order success
        data: 
          type: object
          properties: 
            id: 
              type: string
              example: 23080920000
            user_id: 
              type: number
              example: 2
            payment: 
              type: object
              properties: 
                type: 
                  type: string
                  example: qr
                img_url: 
                  type: string
                  example: 4
                contact_name: 
                  type: string
                  example: big
                contact_phone: 
                  type: string
                  example: 123456798
                email: 
                  type: string
                  example: big@asd
            delivery: 
              type: object
              properties: 
                id: 
                  type: number
                  example: 1
                address_line: 
                  type: string
                  example: 43/55
                date_start: 
                  type: string
                  format: date-time
                  example: 2023-09-09T14:57:42.114Z
                date_end: 
                  type: string
                  format: nullable
                tracking_number: 
                  type: string
                  format: nullable
                status: 
                  type: string
                  example: active
                sub_district: 
                  type: object
                  properties: 
                    name_th: 
                      type: string
                      example: สุริยวงศ์
                    name_en: 
                      type: string
                      example: Suriyawong
                district: 
                  type: object
                  properties: 
                    name_th: 
                      type: string
                      example: เขตบางเขน
                    name_en: 
                      type: string
                      example: Khet Bang Khen
                province: 
                  type: object
                  properties: 
                    name_th: 
                      type: string
                      example: สมุทรปราการ
                    name_en: 
                      type: string
                      example: Samut Prakan
                zip_code: 
                  type: string
                  example: 10500
            type_delivery: 
              type: string
              example: delivery
            cost: 
              type: number
              example: 2000
            status: 
              type: string
              example: waiting
            create_at: 
              type: string
              format: date-time
              example: 2023-09-09T21:57:42.656Z
    OrderAllResponse:
      type: object
      properties: 
        status: 
          type: boolean
        message: 
          type: string
          example: Get all order success
        data: 
          type: array
          items: 
            type: object
            properties: 
              id: 
                type: string
                example: 23080920000
              user_id: 
                type: number
                example: 2
              delivery_id: 
                type: number
                example: 1
              payment_id: 
                type: number
                example: 1
              type_delivery: 
                type: string
                example: delivery
              total_cost: 
                type: number
                example: 2000
              status: 
                type: string
                example: waiting
              create_at: 
                type: string
                format: date-time
                example: 2023-09-09T21:57:42.656Z
